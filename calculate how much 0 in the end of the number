method 1：
import re #regular expression
def end_zeros(num: int) -> int:
    x = re.findall(r'0+\b', str(num)) #findall(string[, pos[, endpos]]), '\b'Matches the empty string
    return 0 if len(x) == 0 else len(x[0])
#(通过依次查找0+ 计算)

method 2：
def end_zeros(num: int) -> int:
    return len(str(num)) - len(str(num).rstrip("0")) #original leanghth- new length after cutting 0 in the end

if __name__ == '__main__':
    print("Example:")
    print(end_zeros(0))

    # These "asserts" are used for self-checking and not for an auto-testing
    assert end_zeros(0) == 1
    assert end_zeros(1) == 0
    assert end_zeros(10) == 1
    assert end_zeros(101) == 0
    assert end_zeros(245) == 0
    assert end_zeros(100100) == 2
    print("Coding complete? Click 'Check' to earn cool rewards!")
